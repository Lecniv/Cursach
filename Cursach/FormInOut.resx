<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStripInOut.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAQFDAYCAAAAAAAAAAAAAAAAAAAAAAUMBgIAAAAEAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwEC
        AQIAAAAAAAAAAAAAAAAAAAAFAAAAEAAAABAAAAAFAAAAAAAAAAAAAAAAAQEBAgAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAMOHxAAFjEZAQAAADUAAACFAAAAvwEDAt8FCwbsBQsG7AEDAt8AAAC/AAAAhQAAADUWMRkBDh8QAAAA
        AAMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEB
        AQIAAAADAAAAAAECAUIAAADFChgM/yBMJv8ydTr/PY5H/0GYTP9BmEz/PY5H/zJ1Ov8gTCb/ChgM/wAA
        AMUBAgFCAAAAAAAAAAMBAQECAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAACBAICNHo9ABMrFgkAAACdCRUK/y5qNf9IqVT9T7dc+02zWvxLrlf9SqxW/kqsVv5Lrlf9TbNa/E+3
        XPtIqVT9Lmo1/gkVCv8AAACbEioVCAAAAAABAgECAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AdAHEQgSBxEIAAIFAwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAA
        AAYAAACqAAAA7QAAAGIHEAgEBQ0GAAEDAQDk//YA1P/rANj/7QHW/+8F0tDVAQAAAAAAAAAAAAAATwAA
        AOQBAwGtDyMSCFrTaQACBQICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAAAwAAAAAAAABKAAAA0wAAAN8AAACXAgQCVAcQCC4GDgcbAAAAFwAAACUAAABOAAAAlgEC
        AeIBAwLYAgQCTAECAQAAAQADAAEAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAAAAAAAAAAAPQAAAJgAAADLAAAA2gAAANwAAADdAAEA2wAB
        AMwAAQCYAAAAPQAAAAAAAAAAAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAIAAAAAAAAAAAAAAAAAAAAGAAAAFAAA
        ABQAAAAGAAAAAAAAAAAAAAAAAAAAAgAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAEAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAABAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAEAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/+gX//9CQv/9lCm/+kACX/SAAS/qAAAX1AAAK8gAABOIAAARkAAACZAA
        AAkkAAAEJAAABCRIEgRAiBECQIgRAkCIEQJAiBECJEgSBCYAAAQiAAAEkwAACZCAAAmJQAARyKAAE9Qo
        ACvoCQhX9IABL/pAAl/9lCm//0JC///oF/8=
</value>
  </data>
</root>